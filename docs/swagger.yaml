basePath: /
definitions:
  dtos.Address:
    properties:
      city:
        type: string
      district:
        type: string
      id:
        type: integer
      street:
        type: string
      ward:
        type: string
    required:
    - city
    - district
    - id
    - street
    - ward
    type: object
  dtos.Bookmark:
    properties:
      category:
        type: string
      color:
        allOf:
        - $ref: '#/definitions/dtos.BookmarkItem'
        description: Color of product
      display:
        description: Display Super AMOLED
        type: string
      image:
        description: Image of product
        items:
          type: string
        type: array
      name:
        description: Name of product
        type: string
      price:
        type: string
      product_id:
        type: integer
      rating:
        type: number
      screen:
        description: Screen 6.1 inch
        type: string
    type: object
  dtos.BookmarkItem:
    properties:
      color_img:
        description: ColorImage of color Nature Titanium
        type: string
      color_name:
        description: ColorName Nature Titanium
        type: string
      images:
        description: Img of product Nature Titanium
        items:
          type: string
        type: array
      specs:
        $ref: '#/definitions/dtos.SpecsItem'
    type: object
  dtos.CardArticle:
    properties:
      category:
        type: string
      content:
        items:
          $ref: '#/definitions/dtos.CardContent'
        type: array
      src:
        type: string
      title:
        type: string
    required:
    - category
    - title
    type: object
  dtos.CardContent:
    properties:
      content:
        type: string
      src:
        type: string
    required:
    - content
    type: object
  dtos.Cart:
    properties:
      cart_id:
        type: integer
      category:
        type: string
      code:
        type: string
      color:
        type: string
      currency_code:
        type: string
      image:
        type: string
      inventory_id:
        type: integer
      name:
        type: string
      price:
        type: string
      product_id:
        type: integer
      quantity:
        type: integer
      specs:
        $ref: '#/definitions/dtos.Specs'
    type: object
  dtos.CartDTO:
    properties:
      inventory_id:
        type: integer
      quantity:
        type: integer
    required:
    - inventory_id
    - quantity
    type: object
  dtos.Carts:
    properties:
      products:
        items:
          $ref: '#/definitions/dtos.Cart'
        type: array
      user_id:
        type: integer
    type: object
  dtos.Color:
    properties:
      img:
        description: ImageColor of color Nature Titanium
        type: string
      name:
        description: Name Nature Titanium
        type: string
      product:
        description: Img of product Nature Titanium
        items:
          type: string
        type: array
      specs:
        items:
          $ref: '#/definitions/dtos.SpecsItem'
        type: array
    type: object
  dtos.Comment:
    properties:
      content:
        type: string
      inventory_id:
        type: integer
      product_id:
        type: integer
      star:
        type: integer
      user_id:
        type: integer
    required:
    - content
    - inventory_id
    - product_id
    - star
    - user_id
    type: object
  dtos.Coupon:
    properties:
      code:
        type: string
      description:
        type: string
      discount:
        type: integer
      expired_at:
        type: string
      id:
        type: integer
      status:
        type: string
    type: object
  dtos.CreateCoupon:
    properties:
      description:
        type: string
      discount:
        type: integer
      max_day:
        type: integer
      max_use:
        type: integer
      status:
        type: string
    required:
    - description
    - discount
    - max_day
    - max_use
    - status
    type: object
  dtos.CreateProduct:
    properties:
      id:
        type: integer
      msg:
        type: string
    type: object
  dtos.DeliveryAddress:
    properties:
      city:
        type: string
      district:
        type: string
      street:
        type: string
      user_id:
        type: integer
      ward:
        type: string
    required:
    - city
    - district
    - street
    - user_id
    - ward
    type: object
  dtos.DeliveryBody:
    properties:
      address_id:
        type: integer
      method:
        type: string
      note:
        type: string
      received_date:
        type: string
      sent_date:
        type: string
      status:
        type: string
      user_id:
        type: integer
    required:
    - address_id
    - method
    - status
    - user_id
    type: object
  dtos.Error:
    properties:
      msg:
        type: string
    type: object
  dtos.InvUpdate:
    properties:
      available:
        type: string
      currency_code:
        type: string
      id:
        type: string
      price:
        type: string
      product_id:
        type: string
      status:
        type: string
    required:
    - id
    type: object
  dtos.Inventory:
    properties:
      available:
        type: string
      category:
        type: string
      color:
        type: string
      color_img:
        type: string
      currency_code:
        type: string
      id:
        type: integer
      image:
        items:
          type: string
        type: array
      item_code:
        type: string
      price:
        type: string
      product_id:
        type: integer
      product_img:
        type: string
      product_name:
        type: string
      specs:
        $ref: '#/definitions/dtos.Specs'
      status:
        type: string
    required:
    - available
    - currency_code
    - price
    - product_id
    type: object
  dtos.InventoryDetail:
    properties:
      available:
        type: string
      color:
        type: string
      color_img:
        type: string
      currency_code:
        type: string
      image:
        items:
          type: string
        type: array
      price:
        type: string
      product_id:
        type: integer
      specs:
        $ref: '#/definitions/dtos.Specs'
      status:
        type: string
    required:
    - available
    - currency_code
    - price
    - product_id
    type: object
  dtos.InventoryItems:
    properties:
      header:
        $ref: '#/definitions/dtos.StockHeader'
      limit:
        type: integer
      page:
        type: integer
      stock:
        items:
          $ref: '#/definitions/dtos.Inventory'
        type: array
    type: object
  dtos.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dtos.LoginResponse:
    properties:
      email:
        type: string
      success:
        type: boolean
      token:
        type: string
    required:
    - email
    - success
    - token
    type: object
  dtos.News:
    properties:
      cards:
        items:
          $ref: '#/definitions/dtos.CardArticle'
        type: array
      header:
        type: string
    required:
    - cards
    - header
    type: object
  dtos.NewsDTO:
    properties:
      cards:
        items:
          $ref: '#/definitions/dtos.CardArticle'
        type: array
      category:
        type: string
      header:
        type: string
    required:
    - cards
    - category
    - header
    type: object
  dtos.OK:
    properties:
      msg:
        type: string
    type: object
  dtos.Order:
    properties:
      address:
        $ref: '#/definitions/dtos.OrderFormAddress'
      coupon_code:
        type: string
      customer:
        $ref: '#/definitions/dtos.OrderFormCustomer'
      delivery:
        $ref: '#/definitions/dtos.OrderFormDelivery'
      payment_method:
        type: string
      product:
        items:
          $ref: '#/definitions/dtos.OrderFormProduct'
        type: array
    required:
    - address
    - customer
    - delivery
    - payment_method
    - product
    type: object
  dtos.OrderForm:
    properties:
      address:
        $ref: '#/definitions/dtos.OrderFormAddress'
      coupon_code:
        type: string
      customer:
        $ref: '#/definitions/dtos.OrderFormCustomer'
      delivery:
        $ref: '#/definitions/dtos.OrderFormDelivery'
      payment_method:
        type: string
      product:
        items:
          $ref: '#/definitions/dtos.OrderFormProduct'
        type: array
    required:
    - address
    - customer
    - delivery
    - payment_method
    - product
    type: object
  dtos.OrderFormAddress:
    properties:
      city:
        type: string
      district:
        type: string
      street:
        type: string
      ward:
        type: string
    required:
    - city
    - district
    - street
    - ward
    type: object
  dtos.OrderFormCustomer:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone:
        type: string
    required:
    - email
    - first_name
    - last_name
    - phone
    type: object
  dtos.OrderFormDelivery:
    properties:
      method:
        type: string
      note:
        type: string
      sent_date:
        type: string
      status:
        type: string
    required:
    - method
    - status
    type: object
  dtos.OrderFormProduct:
    properties:
      code:
        type: string
      quantity:
        type: integer
    required:
    - code
    - quantity
    type: object
  dtos.OrderInfo:
    properties:
      address:
        $ref: '#/definitions/dtos.OrderFormAddress'
      delivery:
        $ref: '#/definitions/dtos.OrderFormDelivery'
      items:
        items:
          $ref: '#/definitions/model.Order'
        type: array
      payment_method:
        type: string
      time:
        type: string
      total_amount:
        type: string
      user:
        $ref: '#/definitions/dtos.OrderFormCustomer'
      uuid:
        type: string
    type: object
  dtos.OrderResponse:
    properties:
      order_code:
        type: string
    type: object
  dtos.OrderStatus:
    properties:
      order_code:
        type: string
      status:
        type: string
    required:
    - order_code
    - status
    type: object
  dtos.ProductDTO:
    properties:
      category:
        type: string
      desc:
        type: string
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      price:
        type: string
      rating:
        type: number
      specs:
        $ref: '#/definitions/dtos.ProductSpecs'
    type: object
  dtos.ProductDetail:
    properties:
      color:
        description: Color of product
        items:
          $ref: '#/definitions/dtos.Color'
        type: array
      display:
        description: Display Super AMOLED
        type: string
      image:
        description: Image of product
        items:
          type: string
        type: array
      name:
        description: Name of product
        type: string
      price:
        type: string
      rating:
        type: number
      screen:
        description: Screen 6.1 inch
        type: string
    type: object
  dtos.ProductRequest:
    properties:
      category_id:
        type: integer
      description:
        type: string
      name:
        type: string
      price:
        type: string
      specs:
        $ref: '#/definitions/dtos.ProductSpecs'
      status:
        type: string
      supplier_id:
        type: integer
    required:
    - category_id
    - name
    - price
    - supplier_id
    type: object
  dtos.ProductResponse:
    properties:
      category:
        type: string
      created:
        type: string
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      price:
        type: string
      status:
        type: string
    type: object
  dtos.ProductSpecs:
    properties:
      RAM:
        items:
          type: integer
        type: array
      SSD:
        items:
          type: integer
        type: array
      display:
        type: string
      screen:
        type: string
    type: object
  dtos.SignUpRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - phone_number
    type: object
  dtos.SignUpResponse:
    properties:
      msg:
        type: string
      success:
        type: boolean
    required:
    - msg
    - success
    type: object
  dtos.Slices-dtos_ProductResponse:
    properties:
      body:
        items:
          $ref: '#/definitions/dtos.ProductResponse'
        type: array
    type: object
  dtos.Slices-entity_Category:
    properties:
      body:
        items:
          $ref: '#/definitions/entity.Category'
        type: array
    type: object
  dtos.Slices-entity_Supplier:
    properties:
      body:
        items:
          $ref: '#/definitions/entity.Supplier'
        type: array
    type: object
  dtos.Specs:
    properties:
      connection:
        type: string
      desc:
        type: string
      ram:
        type: string
      ssd:
        type: string
    type: object
  dtos.SpecsItem:
    properties:
      connection:
        type: string
      desc:
        type: string
      favorite:
        type: boolean
      inventory_id:
        type: integer
      price:
        type: string
      ram:
        type: string
      ssd:
        type: string
    type: object
  dtos.StockHeader:
    properties:
      active:
        type: integer
      all:
        type: integer
      archive:
        type: integer
      draft:
        type: integer
    type: object
  dtos.Supplier:
    properties:
      email:
        type: string
      name:
        type: string
    required:
    - email
    - name
    type: object
  dtos.UpdateCategories:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    required:
    - description
    - name
    type: object
  dtos.UpdateProductInfo:
    properties:
      category_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: string
      specs:
        $ref: '#/definitions/dtos.ProductSpecs'
      status:
        type: string
      supplier_id:
        type: integer
    required:
    - id
    type: object
  dtos.UserUpdate:
    properties:
      email:
        type: string
      first_name:
        type: string
      image:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
    required:
    - email
    type: object
  entity.Category:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    required:
    - description
    - name
    type: object
  entity.Commune:
    properties:
      district_id:
        type: string
      id:
        type: string
      name:
        type: string
      pid:
        type: integer
    type: object
  entity.District:
    properties:
      id:
        type: string
      name:
        type: string
      pid:
        type: integer
      province_id:
        type: string
    type: object
  entity.Province:
    properties:
      id:
        type: string
      name:
        type: string
      pid:
        type: integer
    type: object
  entity.Supplier:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  ghn.CreateOrderDTO:
    properties:
      client_order_code:
        maxLength: 50
        type: string
      cod_amount:
        maximum: 50000000
        type: integer
      content:
        maxLength: 2000
        type: string
      coupon:
        type: string
      from_address:
        maxLength: 1024
        type: string
      from_district_name:
        type: string
      from_name:
        maxLength: 1024
        type: string
      from_phone:
        type: string
      from_province_name:
        type: string
      from_ward_name:
        type: string
      height:
        maximum: 200
        type: integer
      insurance_value:
        maximum: 5000000
        type: integer
      items:
        items:
          $ref: '#/definitions/ghn.OrderItem'
        type: array
      length:
        maximum: 200
        type: integer
      note:
        maxLength: 5000
        type: string
      payment_type_id:
        type: integer
      pick_shift:
        type: string
      pick_station_id:
        type: integer
      required_note:
        enum:
        - CHOTHUHANG
        - CHOXEMHANGKHONGTHU
        - KHONGCHOXEMHANG
        type: string
      return_address:
        maxLength: 1024
        type: string
      return_district_id:
        type: integer
      return_phone:
        type: string
      return_ward_code:
        type: string
      service_type_id:
        type: integer
      shop_id:
        type: integer
      to_address:
        maxLength: 1024
        type: string
      to_district_id:
        type: integer
      to_name:
        maxLength: 1024
        type: string
      to_phone:
        type: string
      to_ward_code:
        type: string
      token:
        type: string
      weight:
        maximum: 50000
        type: integer
      width:
        maximum: 200
        type: integer
    required:
    - from_address
    - from_district_name
    - from_name
    - from_phone
    - from_province_name
    - from_ward_name
    - height
    - items
    - length
    - payment_type_id
    - required_note
    - service_type_id
    - shop_id
    - to_address
    - to_district_id
    - to_name
    - to_phone
    - to_ward_code
    - token
    - weight
    - width
    type: object
  ghn.Data:
    properties:
      district_encode:
        type: string
      expected_delivery_time:
        type: string
      fee:
        $ref: '#/definitions/ghn.Fee'
      order_code:
        type: string
      sort_code:
        type: string
      total_fee:
        type: string
      trans_type:
        type: string
      ward_encode:
        type: string
    type: object
  ghn.Fee:
    properties:
      coupon:
        type: integer
      insurance:
        type: integer
      main_service:
        type: integer
      r2s:
        type: integer
      return:
        type: integer
      station_do:
        type: integer
      station_pu:
        type: integer
    type: object
  ghn.Log:
    properties:
      status:
        type: string
      updated_date:
        type: string
    type: object
  ghn.OrderDTO:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/ghn.Data'
      message:
        type: string
    type: object
  ghn.OrderInfo:
    properties:
      _id:
        type: string
      client_id:
        type: integer
      client_order_code:
        type: string
      cod_amount:
        type: integer
      cod_collect_date:
        type: string
      cod_failed_amount:
        type: integer
      cod_failed_collect_date:
        type: string
      cod_transfer_date:
        type: string
      content:
        type: string
      converted_weight:
        type: integer
      coupon:
        type: string
      created_client:
        type: integer
      created_date:
        type: string
      created_employee:
        type: integer
      created_ip:
        type: string
      created_source:
        type: string
      current_warehouse_id:
        type: integer
      custom_service_fee:
        type: integer
      deliver_station_id:
        type: integer
      deliver_warehouse_id:
        type: integer
      employee_note:
        type: string
      finish_date:
        type: string
      from_address:
        type: string
      from_district_id:
        type: integer
      from_name:
        type: string
      from_phone:
        type: string
      from_ward_code:
        type: string
      height:
        type: integer
      insurance_value:
        type: integer
      is_cod_collected:
        type: boolean
      is_cod_transferred:
        type: boolean
      leadtime:
        type: string
      length:
        type: integer
      log:
        items:
          $ref: '#/definitions/ghn.Log'
        type: array
      next_warehouse_id:
        type: integer
      note:
        type: string
      order_code:
        type: string
      order_date:
        type: string
      order_value:
        type: integer
      payment_type_id:
        type: integer
      pick_station_id:
        type: integer
      pick_warehouse_id:
        type: integer
      required_note:
        type: string
      return_address:
        type: string
      return_district_id:
        type: integer
      return_name:
        type: string
      return_phone:
        type: string
      return_ward_code:
        type: string
      return_warehouse_id:
        type: integer
      service_id:
        type: integer
      service_type_id:
        type: integer
      shop_id:
        type: integer
      soc_id:
        type: string
      status:
        type: string
      tag:
        items:
          type: string
        type: array
      to_address:
        type: string
      to_district_id:
        type: integer
      to_name:
        type: string
      to_phone:
        type: string
      to_ward_code:
        type: string
      updated_client:
        type: integer
      updated_date:
        type: string
      updated_employee:
        type: integer
      updated_ip:
        type: string
      updated_source:
        type: string
      updated_warehouse:
        type: integer
      version_no:
        type: string
      weight:
        type: integer
      width:
        type: integer
    type: object
  ghn.OrderInfoDTO:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/ghn.OrderInfo'
        type: array
      message:
        type: string
    type: object
  ghn.OrderItem:
    properties:
      category:
        type: string
      code:
        type: string
      height:
        type: integer
      length:
        type: integer
      name:
        type: string
      price:
        type: integer
      quantity:
        type: integer
      weight:
        type: integer
      width:
        type: integer
    required:
    - name
    - quantity
    - weight
    type: object
  model.Comment:
    properties:
      color:
        type: string
      content:
        type: string
      created:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      product_name:
        type: string
      rating:
        type: number
      specs:
        type: string
      user_id:
        type: integer
    type: object
  model.Order:
    properties:
      category_id:
        type: integer
      color:
        type: string
      currency_code:
        type: string
      image:
        type: string
      item_specs:
        type: string
      name:
        type: string
      quantity:
        type: integer
      total_amount:
        type: number
    type: object
  model.Users:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      image:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      role:
        type: string
      username:
        type: string
    required:
    - email
    - first_name
    - id
    - image
    - last_name
    - phone_number
    - role
    - username
    type: object
  payment.PaymentRequest:
    properties:
      amount:
        description: Số tiền (VND)
        type: integer
      bank_code:
        description: Mã ngân hàng
        type: string
      ip_address:
        description: Địa chỉ IP của client
        type: string
      language:
        description: 'Ngôn ngữ (vd: "vn" hoặc "en")'
        type: string
      order_desc:
        description: Mô tả đơn hàng
        type: string
      order_id:
        description: ID đơn hàng
        type: string
      order_type:
        description: Loại đơn hàng
        type: string
    type: object
  payment.PaymentResponse:
    properties:
      message:
        description: Thông báo kết quả
        type: string
      payment_url:
        description: URL thanh toán được xây dựng
        type: string
      success:
        description: Trạng thái thành công hay thất bại
        type: boolean
    type: object
  payment.StatusResponse:
    properties:
      message:
        description: Thông báo
        type: string
      success:
        description: Trạng thái thành công hay thất bại
        type: boolean
    type: object
info:
  contact: {}
  description: This is a documentation for the Swipe API
  title: Swipe Public API v0.0.1
  version: 0.0.1
paths:
  /address:
    get:
      consumes:
      - application/json
      description: get address delivery.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.Address'
            type: array
      tags:
      - address
    post:
      consumes:
      - application/json
      description: create address delivery.
      parameters:
      - description: address request
        in: body
        name: addr
        required: true
        schema:
          $ref: '#/definitions/dtos.DeliveryAddress'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.ProductResponse'
            type: array
      tags:
      - address
  /address/district:
    get:
      consumes:
      - application/json
      description: get district by province ID.
      parameters:
      - description: province id
        in: query
        name: province_id
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.District'
            type: array
      tags:
      - address
  /address/province:
    get:
      consumes:
      - application/json
      description: get province
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Province'
            type: array
      tags:
      - address
  /address/ward:
    get:
      consumes:
      - application/json
      description: get ward by district ID.
      parameters:
      - description: district id
        in: query
        name: district_id
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Commune'
            type: array
      tags:
      - address
  /auth/email:
    get:
      consumes:
      - application/json
      description: check email address before login
      parameters:
      - description: email address
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - authentication
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login account.
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dtos.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.LoginResponse'
      tags:
      - authentication
  /auth/logout:
    get:
      consumes:
      - application/json
      description: logout user from the service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - authentication
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Register account for admin.
      parameters:
      - description: Sign Up
        in: body
        name: sign_up
        required: true
        schema:
          $ref: '#/definitions/dtos.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.SignUpResponse'
      tags:
      - authentication
  /categories:
    get:
      consumes:
      - application/json
      description: get categories
      parameters:
      - description: limit number
        in: query
        name: limit
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.Slices-entity_Category'
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: insert new category
      parameters:
      - description: Categories Request
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/entity.Category'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - categories
  /categories/{id}:
    delete:
      consumes:
      - application/json
      description: delete category by ID
      parameters:
      - description: category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - categories
    put:
      consumes:
      - application/json
      description: update category information
      parameters:
      - description: category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Category Request
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdateCategories'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - categories
  /comment:
    get:
      consumes:
      - application/json
      description: get all comments of product
      parameters:
      - description: id of products
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Comment'
            type: array
      tags:
      - comments
    post:
      consumes:
      - application/json
      description: create comment into products
      parameters:
      - description: comment data request
        in: body
        name: banner
        required: true
        schema:
          $ref: '#/definitions/dtos.Comment'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - comment
  /delivery:
    get:
      consumes:
      - application/json
      description: get delivery info by user id.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - delivery
    post:
      consumes:
      - application/json
      description: create delivery info.
      parameters:
      - description: delivery info request
        in: body
        name: addr
        required: true
        schema:
          $ref: '#/definitions/dtos.DeliveryBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - delivery
  /delivery/order:
    post:
      consumes:
      - application/json
      description: create order delivery.
      parameters:
      - description: order delivery body request
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/ghn.CreateOrderDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ghn.OrderDTO'
      tags:
      - delivery
  /delivery/order/{code}:
    get:
      consumes:
      - application/json
      description: get delivery order details by order code.
      parameters:
      - description: delivery order code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ghn.OrderInfoDTO'
      tags:
      - delivery
  /favorite:
    get:
      consumes:
      - application/json
      description: get product from favorite
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.Bookmark'
            type: array
      tags:
      - favorite
  /favorite/{id}:
    post:
      consumes:
      - application/json
      description: add product to favorite
      parameters:
      - description: inventory id
        in: path
        name: id
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - favorite
  /inventories:
    delete:
      consumes:
      - application/json
      description: delete inventory by id
      parameters:
      - description: inventory id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - inventories
    get:
      consumes:
      - application/json
      description: get all product from inventory
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: number
      - description: limit
        in: query
        name: limit
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.InventoryItems'
      tags:
      - inventories
    post:
      consumes:
      - application/json
      description: add product to inventories
      parameters:
      - description: Inventories Request
        in: body
        name: InvDetail
        required: true
        schema:
          $ref: '#/definitions/dtos.InventoryDetail'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - inventories
    put:
      consumes:
      - application/json
      description: update inventory
      parameters:
      - description: Inventory Request
        in: body
        name: inventory
        required: true
        schema:
          $ref: '#/definitions/dtos.InvUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - inventories
  /inventories/details:
    get:
      consumes:
      - application/json
      description: get product availability in inventories
      parameters:
      - description: inventory id
        in: query
        name: id
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.Inventory'
      tags:
      - inventories
  /inventories/image:
    put:
      consumes:
      - multipart/form-data
      description: update inventory image
      parameters:
      - description: inventory id
        in: query
        name: id
        required: true
        type: integer
      - description: stock image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - inventories
  /inventories/image/color:
    put:
      consumes:
      - multipart/form-data
      description: update inventory image
      parameters:
      - description: inventory id
        in: query
        name: id
        required: true
        type: integer
      - description: stock image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - inventories
  /news:
    get:
      consumes:
      - application/json
      description: get news
      parameters:
      - description: category of news
        in: query
        name: category
        required: true
        type: string
      - description: limit of cards carousel
        in: query
        name: limit
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.News'
      tags:
      - news
    post:
      consumes:
      - application/json
      description: create news
      parameters:
      - description: news Request
        in: body
        name: collection
        required: true
        schema:
          $ref: '#/definitions/dtos.NewsDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - news
  /news/image:
    put:
      consumes:
      - application/json
      description: update news image
      parameters:
      - description: image of news
        in: formData
        name: img
        required: true
        type: file
      - description: news identifier
        in: formData
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - news
  /oauth2/google:
    get:
      consumes:
      - application/json
      description: Auth0 verify token.
      parameters:
      - description: google access token
        in: query
        name: access_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      tags:
      - authentication
  /payment:
    post:
      consumes:
      - application/json
      description: check payment service status
      parameters:
      - description: payment request
        in: body
        name: payment
        required: true
        schema:
          $ref: '#/definitions/payment.PaymentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payment.PaymentResponse'
      tags:
      - payment
  /payment/status:
    get:
      consumes:
      - application/json
      description: check payment service status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payment.StatusResponse'
      tags:
      - payment
  /products:
    delete:
      consumes:
      - application/json
      description: delete product by id
      parameters:
      - description: product id
        in: query
        name: pid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - products
    get:
      consumes:
      - application/json
      description: get product information
      parameters:
      - description: limit number of products
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.Slices-dtos_ProductResponse'
      tags:
      - products
    post:
      consumes:
      - application/json
      description: create new product
      parameters:
      - description: Product Request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dtos.ProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.CreateProduct'
      tags:
      - products
    put:
      consumes:
      - application/json
      description: update product information
      parameters:
      - description: Product Information Request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdateProductInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - products
  /products/{type}:
    get:
      consumes:
      - application/json
      description: get product view
      parameters:
      - description: product type
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.ProductDTO'
            type: array
      tags:
      - products
  /products/details:
    get:
      consumes:
      - application/json
      description: get product details
      parameters:
      - description: product id
        in: query
        name: id
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.ProductDetail'
      tags:
      - products
  /products/images:
    put:
      consumes:
      - multipart/form-data
      description: insert new product image
      parameters:
      - description: id of product
        in: query
        name: id
        required: true
        type: string
      - description: image of product
        in: formData
        name: img
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.Error'
      tags:
      - products
  /products/info:
    get:
      consumes:
      - application/json
      description: get product information
      parameters:
      - description: products id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.ProductResponse'
      tags:
      - products
  /products/thumbnail:
    put:
      consumes:
      - multipart/form-data
      description: insert new product image
      parameters:
      - description: id of product
        in: query
        name: id
        required: true
        type: string
      - description: image of product
        in: formData
        name: img
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.Error'
      tags:
      - products
  /purchase/admin/orders:
    get:
      consumes:
      - application/json
      description: get list of orders.
      parameters:
      - description: limit order
        in: query
        name: limit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.OrderInfo'
            type: array
      tags:
      - purchase
    post:
      consumes:
      - application/json
      description: create order.
      parameters:
      - description: order delivery body request
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/dtos.OrderForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - delivery
  /purchase/carts:
    get:
      consumes:
      - application/json
      description: get list of items from carts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.Carts'
      tags:
      - purchase
    post:
      consumes:
      - application/json
      description: add item to carts.
      parameters:
      - description: cart insert request
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dtos.CartDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - purchase
  /purchase/carts/{id}:
    delete:
      consumes:
      - application/json
      description: delete item from carts
      parameters:
      - description: inventory id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - purchase
  /purchase/coupons:
    delete:
      consumes:
      - application/json
      description: delete coupon by code.
      parameters:
      - description: coupon code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OrderInfo'
      tags:
      - purchase
    get:
      consumes:
      - application/json
      description: get coupon.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.Coupon'
            type: array
      tags:
      - purchase
    post:
      consumes:
      - application/json
      description: create coupon.
      parameters:
      - description: coupon request
        in: body
        name: coupon
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateCoupon'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OrderInfo'
      tags:
      - purchase
  /purchase/orders:
    get:
      consumes:
      - application/json
      description: get list of orders.
      parameters:
      - description: limit order
        in: query
        name: limit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.OrderInfo'
            type: array
      tags:
      - purchase
    post:
      consumes:
      - application/json
      description: create order.
      parameters:
      - description: order insert request
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dtos.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OrderResponse'
      tags:
      - purchase
  /purchase/orders/{code}:
    get:
      consumes:
      - application/json
      description: get order by code.
      parameters:
      - description: order code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OrderInfo'
      tags:
      - delivery
  /purchase/orders/status:
    put:
      consumes:
      - application/json
      description: update order status.
      parameters:
      - description: order status request
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/dtos.OrderStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - purchase
  /rating/{id}:
    put:
      consumes:
      - application/json
      description: update inventory image
      parameters:
      - description: id of product
        in: query
        name: star
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - ratings
  /search:
    get:
      consumes:
      - application/json
      description: get product
      parameters:
      - description: keyword
        in: query
        name: keyword
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.ProductResponse'
            type: array
      tags:
      - search
  /search/details:
    get:
      consumes:
      - application/json
      description: get product
      parameters:
      - description: keyword
        in: query
        name: key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.ProductDetail'
            type: array
      tags:
      - search
  /status:
    get:
      consumes:
      - application/json
      description: health check api server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
      tags:
      - base
  /suppliers:
    get:
      consumes:
      - application/json
      description: get suppliers information
      parameters:
      - description: limit number of suppliers
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.Slices-entity_Supplier'
      tags:
      - suppliers
    post:
      consumes:
      - application/json
      description: insert new suppliers information
      parameters:
      - description: Suppliers Request
        in: body
        name: Supplier
        required: true
        schema:
          $ref: '#/definitions/dtos.Supplier'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - suppliers
  /users:
    get:
      consumes:
      - application/json
      description: get information for users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Users'
      tags:
      - authentication
    put:
      consumes:
      - application/json
      description: update information for users.
      parameters:
      - description: Update Users
        in: body
        name: UserSchema
        required: true
        schema:
          $ref: '#/definitions/dtos.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - authentication
  /users/image:
    put:
      consumes:
      - application/json
      description: update information for users.
      parameters:
      - description: image of user
        in: formData
        name: img
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - authentication
  /worker:
    get:
      consumes:
      - application/json
      description: health check worker consume server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
      tags:
      - base
swagger: "2.0"
