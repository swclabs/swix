// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.21.12
// source: proto/vnpay.proto

package payment

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message chứa thông tin đầu vào của yêu cầu thanh toán
type PaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderType string `protobuf:"bytes,1,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"` // Loại đơn hàng
	OrderId   string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`       // ID đơn hàng
	Amount    int64  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`                       // Số tiền (VND)
	OrderDesc string `protobuf:"bytes,4,opt,name=order_desc,json=orderDesc,proto3" json:"order_desc,omitempty"` // Mô tả đơn hàng
	BankCode  string `protobuf:"bytes,5,opt,name=bank_code,json=bankCode,proto3" json:"bank_code,omitempty"`    // Mã ngân hàng
	Language  string `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`                    // Ngôn ngữ (vd: "vn" hoặc "en")
	IpAddress string `protobuf:"bytes,7,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"` // Địa chỉ IP của client
}

func (x *PaymentRequest) Reset() {
	*x = PaymentRequest{}
	mi := &file_proto_vnpay_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentRequest) ProtoMessage() {}

func (x *PaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vnpay_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentRequest.ProtoReflect.Descriptor instead.
func (*PaymentRequest) Descriptor() ([]byte, []int) {
	return file_proto_vnpay_proto_rawDescGZIP(), []int{0}
}

func (x *PaymentRequest) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *PaymentRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *PaymentRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PaymentRequest) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *PaymentRequest) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *PaymentRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *PaymentRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

// Message chứa thông tin phản hồi từ dịch vụ thanh toán
type PaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentUrl string `protobuf:"bytes,1,opt,name=payment_url,json=paymentUrl,proto3" json:"payment_url,omitempty"` // URL thanh toán được xây dựng
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                         // Thông báo kết quả
	Success    bool   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`                        // Trạng thái thành công hay thất bại
}

func (x *PaymentResponse) Reset() {
	*x = PaymentResponse{}
	mi := &file_proto_vnpay_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentResponse) ProtoMessage() {}

func (x *PaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vnpay_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentResponse.ProtoReflect.Descriptor instead.
func (*PaymentResponse) Descriptor() ([]byte, []int) {
	return file_proto_vnpay_proto_rawDescGZIP(), []int{1}
}

func (x *PaymentResponse) GetPaymentUrl() string {
	if x != nil {
		return x.PaymentUrl
	}
	return ""
}

func (x *PaymentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PaymentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Message chứa thông tin đầu vào của Payment Return
type PaymentReturnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vnp_TmnCode           string `protobuf:"bytes,1,opt,name=vnp_TmnCode,json=vnpTmnCode,proto3" json:"vnp_TmnCode,omitempty"`                                // Mã website của merchant trên hệ thống của VNPAY
	Vnp_Amount            uint64 `protobuf:"varint,2,opt,name=vnp_Amount,json=vnpAmount,proto3" json:"vnp_Amount,omitempty"`                                  // Số tiền thanh toán (nhân thêm 100 lần)
	Vnp_BankCode          string `protobuf:"bytes,3,opt,name=vnp_BankCode,json=vnpBankCode,proto3" json:"vnp_BankCode,omitempty"`                             // Mã Ngân hàng thanh toán
	Vnp_BankTranNo        string `protobuf:"bytes,4,opt,name=vnp_BankTranNo,json=vnpBankTranNo,proto3" json:"vnp_BankTranNo,omitempty"`                       // Mã giao dịch tại Ngân hàng
	Vnp_CardType          string `protobuf:"bytes,5,opt,name=vnp_CardType,json=vnpCardType,proto3" json:"vnp_CardType,omitempty"`                             // Loại tài khoản/thẻ khách hàng sử dụng: ATM, QRCODE
	Vnp_PayDate           string `protobuf:"bytes,6,opt,name=vnp_PayDate,json=vnpPayDate,proto3" json:"vnp_PayDate,omitempty"`                                // Thời gian thanh toán (yyyyMMddHHmmss)
	Vnp_OrderInfo         string `protobuf:"bytes,7,opt,name=vnp_OrderInfo,json=vnpOrderInfo,proto3" json:"vnp_OrderInfo,omitempty"`                          // Thông tin mô tả nội dung thanh toán (không dấu)
	Vnp_TransactionNo     uint64 `protobuf:"varint,8,opt,name=vnp_TransactionNo,json=vnpTransactionNo,proto3" json:"vnp_TransactionNo,omitempty"`             // Mã giao dịch ghi nhận tại hệ thống VNPAY
	Vnp_ResponseCode      string `protobuf:"bytes,9,opt,name=vnp_ResponseCode,json=vnpResponseCode,proto3" json:"vnp_ResponseCode,omitempty"`                 // Mã phản hồi kết quả thanh toán
	Vnp_TransactionStatus string `protobuf:"bytes,10,opt,name=vnp_TransactionStatus,json=vnpTransactionStatus,proto3" json:"vnp_TransactionStatus,omitempty"` // Tình trạng giao dịch tại VNPAY
	Vnp_TxnRef            string `protobuf:"bytes,11,opt,name=vnp_TxnRef,json=vnpTxnRef,proto3" json:"vnp_TxnRef,omitempty"`                                  // Mã tham chiếu giao dịch (giống mã gửi sang VNPAY)
	Vnp_SecureHashType    string `protobuf:"bytes,12,opt,name=vnp_SecureHashType,json=vnpSecureHashType,proto3" json:"vnp_SecureHashType,omitempty"`          // Loại mã băm sử dụng: SHA256, HmacSHA512
	Vnp_SecureHash        string `protobuf:"bytes,13,opt,name=vnp_SecureHash,json=vnpSecureHash,proto3" json:"vnp_SecureHash,omitempty"`                      // Giá trị mã băm để xác thực giao dịch
}

func (x *PaymentReturnRequest) Reset() {
	*x = PaymentReturnRequest{}
	mi := &file_proto_vnpay_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentReturnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentReturnRequest) ProtoMessage() {}

func (x *PaymentReturnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vnpay_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentReturnRequest.ProtoReflect.Descriptor instead.
func (*PaymentReturnRequest) Descriptor() ([]byte, []int) {
	return file_proto_vnpay_proto_rawDescGZIP(), []int{2}
}

func (x *PaymentReturnRequest) GetVnp_TmnCode() string {
	if x != nil {
		return x.Vnp_TmnCode
	}
	return ""
}

func (x *PaymentReturnRequest) GetVnp_Amount() uint64 {
	if x != nil {
		return x.Vnp_Amount
	}
	return 0
}

func (x *PaymentReturnRequest) GetVnp_BankCode() string {
	if x != nil {
		return x.Vnp_BankCode
	}
	return ""
}

func (x *PaymentReturnRequest) GetVnp_BankTranNo() string {
	if x != nil {
		return x.Vnp_BankTranNo
	}
	return ""
}

func (x *PaymentReturnRequest) GetVnp_CardType() string {
	if x != nil {
		return x.Vnp_CardType
	}
	return ""
}

func (x *PaymentReturnRequest) GetVnp_PayDate() string {
	if x != nil {
		return x.Vnp_PayDate
	}
	return ""
}

func (x *PaymentReturnRequest) GetVnp_OrderInfo() string {
	if x != nil {
		return x.Vnp_OrderInfo
	}
	return ""
}

func (x *PaymentReturnRequest) GetVnp_TransactionNo() uint64 {
	if x != nil {
		return x.Vnp_TransactionNo
	}
	return 0
}

func (x *PaymentReturnRequest) GetVnp_ResponseCode() string {
	if x != nil {
		return x.Vnp_ResponseCode
	}
	return ""
}

func (x *PaymentReturnRequest) GetVnp_TransactionStatus() string {
	if x != nil {
		return x.Vnp_TransactionStatus
	}
	return ""
}

func (x *PaymentReturnRequest) GetVnp_TxnRef() string {
	if x != nil {
		return x.Vnp_TxnRef
	}
	return ""
}

func (x *PaymentReturnRequest) GetVnp_SecureHashType() string {
	if x != nil {
		return x.Vnp_SecureHashType
	}
	return ""
}

func (x *PaymentReturnRequest) GetVnp_SecureHash() string {
	if x != nil {
		return x.Vnp_SecureHash
	}
	return ""
}

// Message phản hồi cho Payment Return
type PaymentReturnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result            string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`                                             // Kết quả ("Thành công" hoặc "Lỗi")
	Message           string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                                           // Thông báo (vd: "Sai checksum")
	OrderId           string `protobuf:"bytes,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                            // ID đơn hàng
	Amount            int64  `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`                                            // Số tiền
	OrderDesc         string `protobuf:"bytes,5,opt,name=order_desc,json=orderDesc,proto3" json:"order_desc,omitempty"`                      // Mô tả đơn hàng
	Vnp_TransactionNo string `protobuf:"bytes,6,opt,name=vnp_TransactionNo,json=vnpTransactionNo,proto3" json:"vnp_TransactionNo,omitempty"` // Mã giao dịch VNPAY
	Vnp_ResponseCode  string `protobuf:"bytes,7,opt,name=vnp_ResponseCode,json=vnpResponseCode,proto3" json:"vnp_ResponseCode,omitempty"`    // Mã phản hồi VNPAY
}

func (x *PaymentReturnResponse) Reset() {
	*x = PaymentReturnResponse{}
	mi := &file_proto_vnpay_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentReturnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentReturnResponse) ProtoMessage() {}

func (x *PaymentReturnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vnpay_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentReturnResponse.ProtoReflect.Descriptor instead.
func (*PaymentReturnResponse) Descriptor() ([]byte, []int) {
	return file_proto_vnpay_proto_rawDescGZIP(), []int{3}
}

func (x *PaymentReturnResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *PaymentReturnResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PaymentReturnResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *PaymentReturnResponse) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PaymentReturnResponse) GetOrderDesc() string {
	if x != nil {
		return x.OrderDesc
	}
	return ""
}

func (x *PaymentReturnResponse) GetVnp_TransactionNo() string {
	if x != nil {
		return x.Vnp_TransactionNo
	}
	return ""
}

func (x *PaymentReturnResponse) GetVnp_ResponseCode() string {
	if x != nil {
		return x.Vnp_ResponseCode
	}
	return ""
}

type StatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_proto_vnpay_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vnpay_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_vnpay_proto_rawDescGZIP(), []int{4}
}

type StatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`  // Thông báo
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"` // Trạng thái thành công hay thất bại
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_proto_vnpay_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vnpay_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_vnpay_proto_rawDescGZIP(), []int{5}
}

func (x *StatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_vnpay_proto protoreflect.FileDescriptor

var file_proto_vnpay_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x6e, 0x70, 0x61, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xd9, 0x01, 0x0a,
	0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x66, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x8b, 0x04, 0x0a, 0x14, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6e, 0x70,
	0x5f, 0x54, 0x6d, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x76, 0x6e, 0x70, 0x54, 0x6d, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x6e,
	0x70, 0x5f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x76, 0x6e, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6e, 0x70,
	0x5f, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x76, 0x6e, 0x70, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x76, 0x6e, 0x70, 0x5f, 0x42, 0x61, 0x6e, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x4e, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x6e, 0x70, 0x42, 0x61, 0x6e, 0x6b, 0x54, 0x72, 0x61,
	0x6e, 0x4e, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6e, 0x70, 0x5f, 0x43, 0x61, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6e, 0x70, 0x43, 0x61,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6e, 0x70, 0x5f, 0x50, 0x61,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x6e, 0x70,
	0x50, 0x61, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x6e, 0x70, 0x5f, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x76, 0x6e, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x11,
	0x76, 0x6e, 0x70, 0x5f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x76, 0x6e, 0x70, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x6e, 0x70,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x6e, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x15, 0x76, 0x6e, 0x70, 0x5f, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x76, 0x6e, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x6e, 0x70,
	0x5f, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76,
	0x6e, 0x70, 0x54, 0x78, 0x6e, 0x52, 0x65, 0x66, 0x12, 0x2d, 0x0a, 0x12, 0x76, 0x6e, 0x70, 0x5f,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x48, 0x61, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x76, 0x6e, 0x70, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x48,
	0x61, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x6e, 0x70, 0x5f, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x76, 0x6e, 0x70, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x48, 0x61, 0x73, 0x68, 0x22, 0xf3,
	0x01, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x2b, 0x0a, 0x11,
	0x76, 0x6e, 0x70, 0x5f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x6e, 0x70, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x6e, 0x70,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x6e, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xe3, 0x01, 0x0a, 0x05,
	0x56, 0x4e, 0x50, 0x61, 0x79, 0x12, 0x3e, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x14, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x12, 0x1d, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_vnpay_proto_rawDescOnce sync.Once
	file_proto_vnpay_proto_rawDescData = file_proto_vnpay_proto_rawDesc
)

func file_proto_vnpay_proto_rawDescGZIP() []byte {
	file_proto_vnpay_proto_rawDescOnce.Do(func() {
		file_proto_vnpay_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_vnpay_proto_rawDescData)
	})
	return file_proto_vnpay_proto_rawDescData
}

var file_proto_vnpay_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_vnpay_proto_goTypes = []any{
	(*PaymentRequest)(nil),        // 0: payment.PaymentRequest
	(*PaymentResponse)(nil),       // 1: payment.PaymentResponse
	(*PaymentReturnRequest)(nil),  // 2: payment.PaymentReturnRequest
	(*PaymentReturnResponse)(nil), // 3: payment.PaymentReturnResponse
	(*StatusRequest)(nil),         // 4: payment.StatusRequest
	(*StatusResponse)(nil),        // 5: payment.StatusResponse
}
var file_proto_vnpay_proto_depIdxs = []int32{
	4, // 0: payment.VNPay.CheckStatus:input_type -> payment.StatusRequest
	0, // 1: payment.VNPay.ProcessPayment:input_type -> payment.PaymentRequest
	2, // 2: payment.VNPay.ProcessPaymentReturn:input_type -> payment.PaymentReturnRequest
	5, // 3: payment.VNPay.CheckStatus:output_type -> payment.StatusResponse
	1, // 4: payment.VNPay.ProcessPayment:output_type -> payment.PaymentResponse
	3, // 5: payment.VNPay.ProcessPaymentReturn:output_type -> payment.PaymentReturnResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_vnpay_proto_init() }
func file_proto_vnpay_proto_init() {
	if File_proto_vnpay_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_vnpay_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_vnpay_proto_goTypes,
		DependencyIndexes: file_proto_vnpay_proto_depIdxs,
		MessageInfos:      file_proto_vnpay_proto_msgTypes,
	}.Build()
	File_proto_vnpay_proto = out.File
	file_proto_vnpay_proto_rawDesc = nil
	file_proto_vnpay_proto_goTypes = nil
	file_proto_vnpay_proto_depIdxs = nil
}
